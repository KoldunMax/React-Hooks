{"ast":null,"code":"import _slicedToArray from \"/home/koldun/projects/React-Hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/koldun/projects/React-Hooks/src/components/Todo.js\";\nimport React, { Fragment, useState } from 'react';\n\nconst Todo = props => {\n  // const [todoName, setTodoName] = useState('');\n  // const [todoList, setTodoList] = useState([]);\n  const _useState = useState({\n    userInput: '',\n    todoList: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoState = _useState2[0],\n        setTodoState = _useState2[1];\n\n  const inputChangeHandler = event => {\n    setTodoState({\n      userInput: event.target.value,\n      todoList: todoState.todoList\n    });\n  };\n\n  const todoAddHandler = () => {\n    setTodoState({\n      userInput: todoState.userInput,\n      todoList: todoState.userList.concat(todoState.userInput)\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    onChange: inputChangeHandler,\n    value: todoState.userInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: todoAddHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, todoState.userList.map(todo => React.createElement(\"li\", {\n    key: todo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, todo))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/home/koldun/projects/React-Hooks/src/components/Todo.js"],"names":["React","Fragment","useState","Todo","props","userInput","todoList","todoState","setTodoState","inputChangeHandler","event","target","value","todoAddHandler","userList","concat","map","todo"],"mappings":";;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,QAFF,QAGO,OAHP;;AAKA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB;AACA;AAFoB,oBAIcF,QAAQ,CAAC;AACzCG,IAAAA,SAAS,EAAE,EAD8B;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAJtB;AAAA;AAAA,QAIbC,SAJa;AAAA,QAIFC,YAJE;;AASpB,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpCF,IAAAA,YAAY,CAAC;AACXH,MAAAA,SAAS,EAAEK,KAAK,CAACC,MAAN,CAAaC,KADb;AAEXN,MAAAA,QAAQ,EAAEC,SAAS,CAACD;AAFT,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMO,cAAc,GAAG,MAAM;AAC3BL,IAAAA,YAAY,CAAC;AACXH,MAAAA,SAAS,EAAEE,SAAS,CAACF,SADV;AAEXC,MAAAA,QAAQ,EAAEC,SAAS,CAACO,QAAV,CAAmBC,MAAnB,CAA0BR,SAAS,CAACF,SAApC;AAFC,KAAD,CAAZ;AAID,GALD;;AAOA,SAAQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,QAAQ,EAAEI,kBAHZ;AAIE,IAAA,KAAK,EAAEF,SAAS,CAACF,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,EAOJ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEQ,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPI,EAUJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,CAACO,QAAV,CAAmBE,GAAnB,CAAuBC,IAAI,IAC1B;AAAI,IAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBA,IAAhB,CADD,CADH,CAVI,CAAR;AAgBD,CAvCD;;AAyCA,eAAed,IAAf","sourcesContent":["import React, {\n  Fragment,\n  useState\n} from 'react';\n\nconst Todo = props => {\n  // const [todoName, setTodoName] = useState('');\n  // const [todoList, setTodoList] = useState([]);\n\n  const [todoState, setTodoState] = useState({\n    userInput: '',\n    todoList: []\n  });\n\n  const inputChangeHandler = (event) => {\n    setTodoState({\n      userInput: event.target.value,\n      todoList: todoState.todoList\n    })\n  }\n\n  const todoAddHandler = () => {\n    setTodoState({\n      userInput: todoState.userInput,\n      todoList: todoState.userList.concat(todoState.userInput)\n    })\n  }\n\n  return (<Fragment>\n    <input\n      type=\"text\"\n      placeholder=\"Todo\"\n      onChange={inputChangeHandler}\n      value={todoState.userInput}\n    />\n      <button type=\"button\" onClick={todoAddHandler}>\n        Add\n      </button>\n      <ul>\n        {todoState.userList.map(todo => (\n          <li key={todo}>{todo}</li>\n        ))}\n      </ul>\n    </Fragment>)\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}